import React, { useState, useEffect } from 'react';
import { View, Text, Button, TextInput, FlatList, Alert, TouchableOpacity, Image } from 'react-native';
import { NavigationContainer } from '@react-navigation/native';
import { createBottomTabNavigator } from '@react-navigation/bottom-tabs';
import AsyncStorage from '@react-native-async-storage/async-storage';

const AbasNavegacao = createBottomTabNavigator();

const TelaLogin = ({ navigation }) => {
  const [usuario, setUsuario] = useState('');
  const [senha, setSenha] = useState('');

  const realizarLogin = async () => {
    const senhaSalva = await AsyncStorage.getItem(usuario);
    if (senhaSalva === senha) {
      Alert.alert("Sucesso", "Bem-vindo!");
      navigation.navigate("Minhas Playlists");
    } else {
      Alert.alert("Erro", "Usuário ou senha incorretos.");
    }
  };

  return (
    <View style={{ flex: 1, backgroundColor: '#121212', padding: 16 }}>
      <Text style={{ fontSize: 24, color: '#ff69b4', textAlign: 'center' }}>Login</Text>
      <TextInput
        style={{ backgroundColor: '#fff', padding: 10, marginVertical: 8 }}
        placeholder="Usuário"
        onChangeText={setUsuario}
      />
      <TextInput
        style={{ backgroundColor: '#fff', padding: 10, marginVertical: 8 }}
        placeholder="Senha"
        secureTextEntry
        onChangeText={setSenha}
      />
      <Button title="Entrar" color="#ff69b4" onPress={realizarLogin} />
      <Button title="Registrar" color="#ff69b4" onPress={() => navigation.navigate("Cadastro")} />
    </View>
  );
};

const TelaCadastro = ({ navigation }) => {
  const [novoUsuario, setNovoUsuario] = useState('');
  const [novaSenha, setNovaSenha] = useState('');

  const registrarUsuario = async () => {
    await AsyncStorage.setItem(novoUsuario, novaSenha);
    Alert.alert("Sucesso", "Cadastro realizado!");
    navigation.navigate("Login");
  };

  return (
    <View style={{ flex: 1, backgroundColor: '#121212', padding: 16 }}>
      <Text style={{ fontSize: 24, color: '#ff69b4', textAlign: 'center' }}>Registrar-se</Text>
      <TextInput
        style={{ backgroundColor: '#fff', padding: 10, marginVertical: 8 }}
        placeholder="Novo Usuário"
        onChangeText={setNovoUsuario}
      />
      <TextInput
        style={{ backgroundColor: '#fff', padding: 10, marginVertical: 8 }}
        placeholder="Nova Senha"
        secureTextEntry
        onChangeText={setNovaSenha}
      />
      <Button title="Cadastrar" color="#ff69b4" onPress={registrarUsuario} />
    </View>
  );
};

const TelaPlaylists = ({ navigation }) => {
  const [playlists, setPlaylists] = useState([]);

  const carregarPlaylists = async () => {
    const playlistsSalvas = await AsyncStorage.getItem('playlists');
    if (playlistsSalvas) {
      setPlaylists(JSON.parse(playlistsSalvas));
    } else {
      setPlaylists([]);
    }
  };

  const excluirPlaylist = async (id) => {
    const playlistsSalvas = await AsyncStorage.getItem('playlists');
    const playlists = playlistsSalvas ? JSON.parse(playlistsSalvas) : [];
    const playlistsAtualizadas = playlists.filter(pl => pl.id !== id);
    await AsyncStorage.setItem('playlists', JSON.stringify(playlistsAtualizadas));
    Alert.alert("Sucesso", "Playlist excluída!");
    carregarPlaylists();
  };

  useEffect(() => {
    carregarPlaylists();
  }, []);

  return (
    <View style={{ flex: 1, backgroundColor: '#121212', padding: 16 }}>
      <Text style={{ fontSize: 24, color: '#ff69b4', textAlign: 'center' }}>Minhas Playlists</Text>
      <FlatList
        data={playlists}
        keyExtractor={(item) => item.id}
        renderItem={({ item }) => (
          <View>
            <TouchableOpacity onPress={() => navigation.navigate("Detalhes Playlist", { playlist: item })}>
              <Text style={{ color: '#ffffff', fontSize: 18, padding: 10 }}>{item.nome}</Text>
            </TouchableOpacity>
            <TouchableOpacity onPress={() => excluirPlaylist(item.id)}>
              <Text style={{ color: 'red', textAlign: 'right', padding: 10 }}>Excluir</Text>
            </TouchableOpacity>
          </View>
        )}
      />
      <Button title="Criar Nova Playlist" color="#ff69b4" onPress={() => navigation.navigate("Criar Playlist")} />
    </View>
  );
};

const TelaDetalhesPlaylist = ({ route, navigation }) => {
  const { playlist } = route.params || {};
  const [musicas, setMusicas] = useState([]);

  useEffect(() => {
    if (playlist) {
      setMusicas(playlist.musicas || []);
    }
  }, [playlist]);

  const removerMusica = async (musica) => {
    const novaLista = musicas.filter((m) => m.nome !== musica.nome);
    setMusicas(novaLista);

    const playlistsSalvas = await AsyncStorage.getItem('playlists');
    const playlists = playlistsSalvas ? JSON.parse(playlistsSalvas) : [];
    const playlistsAtualizadas = playlists.map(pl => {
      if (pl.id === playlist.id) {
        return { ...pl, musicas: novaLista };
      }
      return pl;
    });

    await AsyncStorage.setItem('playlists', JSON.stringify(playlistsAtualizadas));
    Alert.alert("Sucesso", "Música removida!");
  };

  if (!playlist) {
    return (
      <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: '#121212' }}>
        <Text style={{ color: '#ff69b4' }}>Playlist não encontrada</Text>
      </View>
    );
  }

  return (
    <View style={{ flex: 1, backgroundColor: '#121212', padding: 16 }}>
      <Text style={{ fontSize: 24, color: '#ff69b4', textAlign: 'center' }}>{playlist.nome}</Text>
      <FlatList
        data={musicas}
        keyExtractor={(item, index) => index.toString()}
        renderItem={({ item }) => (
          <View style={{ flexDirection: 'row', alignItems: 'center', marginVertical: 5 }}>
            <Image source={{ uri: 'https://via.placeholder.com/40' }} style={{ width: 40, height: 40, marginRight: 10 }} />
            <Text style={{ color: '#ffffff', flex: 1 }}>{item.nome}</Text>
            <TouchableOpacity onPress={() => removerMusica(item)}>
              <Text style={{ color: 'red', marginRight: 10 }}>Remover</Text>
            </TouchableOpacity>
            <TouchableOpacity onPress={() => Linking.openURL(item.link)}>
              <Text style={{ color: '#ff69b4' }}>YouTube</Text>
            </TouchableOpacity>
          </View>
        )}
      />
      <Button title="Adicionar Música" color="#ff69b4" onPress={() => navigation.navigate("Adicionar Música", { playlist })} />
    </View>
  );
};



const TelaCriarPlaylist = ({ navigation }) => {
  const [nomePlaylist, setNomePlaylist] = useState('');

  const criarPlaylist = async () => {
    const newPlaylist = {
      id: Date.now().toString(),
      nome: nomePlaylist,
      musicas: []
    };
    const playlistsSalvas = await AsyncStorage.getItem('playlists');
    const playlists = playlistsSalvas ? JSON.parse(playlistsSalvas) : [];
    playlists.push(newPlaylist);
    await AsyncStorage.setItem('playlists', JSON.stringify(playlists));
    Alert.alert("Sucesso", "Playlist criada!");
    navigation.navigate("Minhas Playlists");
  };

  return (
    <View style={{ flex: 1, backgroundColor: '#121212', padding: 16 }}>
      <Text style={{ fontSize: 24, color: '#ff69b4', textAlign: 'center' }}>Criar Playlist</Text>
      <TextInput
        style={{ backgroundColor: '#fff', padding: 10, marginVertical: 8 }}
        placeholder="Nome da Playlist"
        onChangeText={setNomePlaylist}
      />
      <Button title="Criar" color="#ff69b4" onPress={criarPlaylist} />
    </View>
  );
};

const TelaAdicionarMusica = ({ route, navigation }) => {
  const { playlist } = route.params || {};
  const [musica, setMusica] = useState('');

  const adicionarMusica = async () => {
  const novaMusica = { nome: musica, link: `https://www.youtube.com/results?search_query=${encodeURIComponent(musica)}` };

  const playlistsSalvas = await AsyncStorage.getItem('playlists');
  const playlists = playlistsSalvas ? JSON.parse(playlistsSalvas) : [];
  const playlistsAtualizadas = playlists.map(pl => {
    if (pl.id === playlist.id) {
      return { ...pl, musicas: [...pl.musicas, novaMusica] };
    }
    return pl;
  });

  await AsyncStorage.setItem('playlists', JSON.stringify(playlistsAtualizadas));
  Alert.alert("Sucesso", "Música adicionada!");
  navigation.navigate("Detalhes Playlist", { playlist: { ...playlist, musicas: [...playlist.musicas, novaMusica] } });
};


  return (
    <View style={{ flex: 1, backgroundColor: '#121212', padding: 16 }}>
      <Text style={{ fontSize: 24, color: '#ff69b4', textAlign: 'center' }}>Adicionar Música</Text>
      <TextInput
        style={{ backgroundColor: '#fff', padding: 10, marginVertical: 8 }}
        placeholder="Nome da Música"
        onChangeText={setMusica}
      />
      <Button title="Adicionar" color="#ff69b4" onPress={adicionarMusica} />
    </View>
  );
};

export default function App() {
  return (
    <NavigationContainer>
      <AbasNavegacao.Navigator>
        <AbasNavegacao.Screen name="Login" component={TelaLogin} />
        <AbasNavegacao.Screen name="Cadastro" component={TelaCadastro} />
        <AbasNavegacao.Screen name="Minhas Playlists" component={TelaPlaylists} />
        <AbasNavegacao.Screen name="Criar Playlist" component={TelaCriarPlaylist} />
        <AbasNavegacao.Screen name="Adicionar Música" component={TelaAdicionarMusica} />
        <AbasNavegacao.Screen name="Detalhes Playlist" component={TelaDetalhesPlaylist} />
      </AbasNavegacao.Navigator>
    </NavigationContainer>
  );
}